(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{292:function(s,a,t){"use strict";t.r(a);var n=t(13),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[s._v("#")]),s._v(" React")]),s._v(" "),a("h2",{attrs:{id:"react特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react特点"}},[s._v("#")]),s._v(" React特点")]),s._v(" "),a("h3",{attrs:{id:"_1-声明式设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-声明式设计"}},[s._v("#")]),s._v(" 1. 声明式设计")]),s._v(" "),a("p",[s._v("react是面向数据编程，不需要直接去控制dom，你只要把数据操作好，react自己会去帮你操作dom，可以节省很多操作dom的代码。这就是声明式开发。")]),s._v(" "),a("h3",{attrs:{id:"_2-jsx语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-jsx语法"}},[s._v("#")]),s._v(" 2. JSX语法")]),s._v(" "),a("p",[s._v("JSX 是 JavaScript 语法的扩展。React 开发大部分使用 JSX 语法（在JSX中可以将HTML于JS混写）。")]),s._v(" "),a("h3",{attrs:{id:"_3-灵活"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-灵活"}},[s._v("#")]),s._v(" 3. 灵活")]),s._v(" "),a("p",[s._v("react所控制的dom就是id为root的dom，页面上的其他dom元素你页可以使用jq等其他框架 。可以和其他库并存。")]),s._v(" "),a("h3",{attrs:{id:"_4-使用虚拟dom、高效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用虚拟dom、高效"}},[s._v("#")]),s._v(" 4. 使用虚拟DOM、高效")]),s._v(" "),a("p",[s._v("虚拟DOM其实本质就是一个JavaScript对象，当数据和状态发生了变化，都会被自动高效的同步到虚拟DOM中，最后再将仅变化的部分同步到DOM中（不需要整个DOM树重新渲染）")]),s._v(" "),a("h3",{attrs:{id:"_5-组件化开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-组件化开发"}},[s._v("#")]),s._v(" 5. 组件化开发")]),s._v(" "),a("p",[s._v("通过 React 构建组件，使得代码更加容易得到复用和维护，能够很好的应用在大项目的开发中。")]),s._v(" "),a("h3",{attrs:{id:"_6-单向数据流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-单向数据流"}},[s._v("#")]),s._v(" 6. 单向数据流")]),s._v(" "),a("p",[s._v("react是单向数据流，父组件传递给子组件的数据，子组件能够使用，但是不能直接通过this.props修改。 这样让数据清晰代码容易维护。")]),s._v(" "),a("h2",{attrs:{id:"脚手架安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚手架安装"}},[s._v("#")]),s._v(" 脚手架安装")]),s._v(" "),a("p",[s._v("全局安装脚手架（不推荐）")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" create-react-app "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",[a("li",[s._v("通过npx创建项目")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# React不再支持全局安装create-react-app，因此官方建议使用npx来安装")]),s._v("\nnpx create-react-app 项目名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("删除掉新项目中 "),a("code",[s._v("src/")]),s._v(" 文件夹下的所有文件")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入到src目录下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" 项目名/src\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果你使用 Mac 或 Linux:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" *\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果你使用 Windows:")]),s._v("\ndel *\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后回到项目文件夹")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[s._v("在 "),a("code",[s._v("src/")]),s._v(" 文件夹中创建一个名为 "),a("code",[s._v("index.css")]),s._v(" 的文件")])]),s._v(" "),a("li",[a("p",[s._v("在 "),a("code",[s._v("src/")]),s._v(" 文件夹下创建一个名为 "),a("code",[s._v("index.js")]),s._v(" 的文件")])]),s._v(" "),a("li",[a("p",[s._v("拷贝以下三行代码到 "),a("code",[s._v("src/")]),s._v(" 文件夹下的 "),a("code",[s._v("index.js")]),s._v(" 文件的顶部：")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"6"}},[a("li",[s._v("现在，在项目文件夹下执行 "),a("code",[s._v("npm start")]),s._v(" 命令，然后在浏览器访问 "),a("code",[s._v("http://localhost:3000")]),s._v("。这样你就可以在浏览器中看见一个空的井字棋的棋盘了。")])]),s._v(" "),a("h2",{attrs:{id:"组件化开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件化开发"}},[s._v("#")]),s._v(" 组件化开发")]),s._v(" "),a("h3",{attrs:{id:"定义组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义组件"}},[s._v("#")]),s._v(" 定义组件")]),s._v(" "),a("p",[s._v("定义组件分为3步：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("导入React核心模块")])]),s._v(" "),a("li",[a("p",[s._v("定义组件类")])]),s._v(" "),a("li",[a("p",[s._v("导出组件")])])]),s._v(" "),a("p",[s._v("在src目录下新建App.js文件：")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//1、导入React核心模块\nimport React from 'react'\n\n//2、定义组件类\nclass Hello extends React.Component{   //类\n    render(){     //函数\n        return (   //返回值\n            <div>\n                hello world !!! 我是组件\n            </div>\n        )\n    }\n}\n\n//3、导出组件\nexport default Hello\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"引入组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入组件"}},[s._v("#")]),s._v(" 引入组件")]),s._v(" "),a("p",[s._v("在需要引入该组件的index.js中，导入，就可以直接使用这个组件了：")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//import 组件名 from '文件路径'\n\n//1、导入Hello组件 (首字母必须大写)\nimport Hello from './App' \n\nReactDOM.render(\n// 2、使用Hello组件 (首字母必须大写) \n<Hello /> \n, document.getElementById('root'));\n\n//注意：Hello是组件名，在使用的时候就应该写JSX标签写法，而不能直接写Hello\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("定义组件的时候，return 后面只能有一个根标签，不能有多个，但这个标签内部可以有其他多个标签")])]),s._v(" "),a("li",[a("p",[s._v("使用组件的时候，首字母必须大写")])]),s._v(" "),a("li",[a("p",[s._v("如果最外层实在不想放置一层div根目录，可以使用 "),a("strong",[a("code",[s._v("<></>")])]),s._v(" 空标签代替")])])]),s._v(" "),a("h2",{attrs:{id:"语法糖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法糖"}},[s._v("#")]),s._v(" 语法糖")]),s._v(" "),a("h3",{attrs:{id:"科普"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#科普"}},[s._v("#")]),s._v(" 科普")]),s._v(" "),a("p",[s._v("语法糖：一个功能，有两种完成方式，其中简单的写法。叫语法糖")]),s._v(" "),a("h3",{attrs:{id:"jsx-和-html-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-和-html-区别"}},[s._v("#")]),s._v(" jsx 和 html 区别")]),s._v(" "),a("ol",[a("li",[s._v("行内样式 必须是一个对象 第一个{}代表js环境 第二个 {} 代表 对象格式")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<div style="{{width:"200px"}}"></div>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("jsx中不要使用class，用className代替")])]),s._v(" "),a("li",[a("p",[s._v("在jsx中使用js代码，必须要写在{}")])]),s._v(" "),a("li",[a("p",[s._v("jsx 本地图片先引入 后使用")])]),s._v(" "),a("li",[a("p",[s._v("其他的，都可以当做HTML语法来用")])])]),s._v(" "),a("h3",{attrs:{id:"引入方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入方式"}},[s._v("#")]),s._v(" 引入方式")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//引入后立即执行\nimport "./Index.css"\n\n//什么时候调用什么时候执行\nimport Img from "../static/logo.png"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"插值语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插值语法"}},[s._v("#")]),s._v(" 插值语法")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import React, { Component } from "react";\n\nexport default class App3 extends Component {\n  state = {\n    name: "苏东旭",\n    num: 10,\n  };\n  render() {\n    return (\n      <div>\n        <p>{this.state.name}</p>\n        <p>{this.state.num}</p>\n      </div>\n    );\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h2",{attrs:{id:"循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[s._v("#")]),s._v(" 循环")]),s._v(" "),a("p",[s._v("react只支持map遍历")]),s._v(" "),a("p",[s._v("jsx中想写js ==> {}")]),s._v(" "),a("p",[s._v("js中想写jsx==> return ()")]),s._v(" "),a("p",[s._v("互相无限嵌套")]),s._v(" "),a("h2",{attrs:{id:"事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定"}},[s._v("#")]),s._v(" 事件绑定")]),s._v(" "),a("p",[s._v("事件函数就是类里面的一个普通方法")]),s._v(" "),a("p",[s._v("react里面没有双向绑定，")]),s._v(" "),a("p",[s._v("this.setState({num})")]),s._v(" "),a("p",[s._v("onClick={this.state.xxx.bind(index)}")]),s._v(" "),a("h2",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[s._v("#")]),s._v(" constructor")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//\nstate = {}\n\n//constructor 专门用来初始化\nconstructor(){\n  super()\n  this.state = {}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"双向绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双向绑定"}},[s._v("#")]),s._v(" 双向绑定")]),s._v(" "),a("p",[s._v("react不会问react双向绑定原理的，没有双向绑定")]),s._v(" "),a("p",[s._v("复习小程序的双向绑定原理")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import React, { Component } from "react";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      val: "默认值",\n    };\n  }\n  inp(v) {\n    this.setState({\n      val: v.target.value,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <input\n          type="text"\n          value={this.state.val}\n          onChange={this.inp.bind(this)}\n        />\n        <p>{this.state.val}</p>\n      </div>\n    );\n  }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("h2",{attrs:{id:"父子传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子传值"}},[s._v("#")]),s._v(" 父子传值")]),s._v(" "),a("h3",{attrs:{id:"父传子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父传子"}},[s._v("#")]),s._v(" 父传子")]),s._v(" "),a("h4",{attrs:{id:"父组件传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父组件传值"}},[s._v("#")]),s._v(" 父组件传值")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在父组件中引入子组件")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 组件名首字母一定大写\nimport 子组件名 from "子组件位置"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("直接用就行，无需注册")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("render(){\n\treturn(\n\t\t<div>\n\t\t\t<子组件 自定义属性={父组件数据}></子组件>\n\t\t</div>\n\t)\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"子组件接值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件接值"}},[s._v("#")]),s._v(" 子组件接值")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<p>{this.props.自定义属性名}</p>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h5",{attrs:{id:"子组件中限制默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件中限制默认值"}},[s._v("#")]),s._v(" 子组件中限制默认值")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('static defaultProps = {\n  自定义属性名:"属性值",\n  title:"默认值"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h5",{attrs:{id:"子组件中限制类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件中限制类型"}},[s._v("#")]),s._v(" 子组件中限制类型")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 引入限制类型的模块\nimport PropTypes from "prop-types"\n\n// 限制类型 注意不能直接写类型，需要单独引入 限制类型 的模块\nstatic propTypes = {\n  自定义属性名:PropTypes.String\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"子传父"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子传父"}},[s._v("#")]),s._v(" 子传父")]),s._v(" "),a("h4",{attrs:{id:"子组件传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件传值"}},[s._v("#")]),s._v(" 子组件传值")]),s._v(" "),a("h4",{attrs:{id:"父组件接值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父组件接值"}},[s._v("#")]),s._v(" 父组件接值")])])}),[],!1,null,null,null);a.default=e.exports}}]);