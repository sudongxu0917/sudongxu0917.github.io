(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{278:function(v,_,t){"use strict";t.r(_);var s=t(13),i=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"es6"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[v._v("#")]),v._v(" ES6")]),v._v(" "),_("h2",{attrs:{id:"【1】es6新特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#【1】es6新特性"}},[v._v("#")]),v._v(" 【1】ES6新特性")]),v._v(" "),_("ol",[_("li",[v._v("let const")]),v._v(" "),_("li",[v._v("模版字符串")]),v._v(" "),_("li",[v._v("函数的默认参数")]),v._v(" "),_("li",[v._v("箭头函数")]),v._v(" "),_("li",[v._v("解构赋值")]),v._v(" "),_("li",[v._v("Promise")]),v._v(" "),_("li",[v._v("扩展运算符...")]),v._v(" "),_("li",[v._v("class")]),v._v(" "),_("li",[v._v("Symbol")])]),v._v(" "),_("h2",{attrs:{id:"【2】5个字符串函数和5个数组函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#【2】5个字符串函数和5个数组函数"}},[v._v("#")]),v._v(" 【2】5个字符串函数和5个数组函数")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("字符串")]),v._v(" "),_("ul",[_("li",[v._v("trim 去除两端空格")]),v._v(" "),_("li",[v._v("concat 字符串拼接")]),v._v(" "),_("li",[v._v("substr 字符串截取")]),v._v(" "),_("li",[v._v("split 字符串转数组")]),v._v(" "),_("li",[v._v("replace 字符串替换")])])]),v._v(" "),_("li",[_("p",[v._v("数组")]),v._v(" "),_("ul",[_("li",[v._v("push、pop、unshift、shift")]),v._v(" "),_("li",[v._v("splice 删除数据")]),v._v(" "),_("li",[v._v("concat 数组连接")]),v._v(" "),_("li",[v._v("join 数组转字符串")]),v._v(" "),_("li",[v._v("reverse 数组倒序")]),v._v(" "),_("li",[v._v("slice 数组截取")]),v._v(" "),_("li",[v._v("findIndex 查找下标")]),v._v(" "),_("li",[v._v("find 查找数组中的某一个元素，只要找到一个符合的立即停止，返回符合的元素，（返回的元素有浅拷贝，修改数据会生效）")])])])]),v._v(" "),_("h2",{attrs:{id:"【3】get和post的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#【3】get和post的区别"}},[v._v("#")]),v._v(" 【3】get和post的区别")]),v._v(" "),_("ol",[_("li",[v._v("get和post在HTTP中都代表着请求数据，其中get请求相对来说更简单、快速，效率高些")]),v._v(" "),_("li",[v._v("get相对post安全性低")]),v._v(" "),_("li",[v._v("get有缓存，post没有")]),v._v(" "),_("li",[v._v("get体积小，post可以无限大")]),v._v(" "),_("li",[v._v("get的url参数可见，post不可见")]),v._v(" "),_("li",[v._v("get只接受ASCII字符的参数数据类型，post没有限制")]),v._v(" "),_("li",[v._v("get请求参数会保留历史记录，post中参数不会保留")]),v._v(" "),_("li",[v._v("get会被浏览器主动catch，post不会，需要手动设置")]),v._v(" "),_("li",[v._v("get在浏览器回退时无害，post会再次提交请求")])]),v._v(" "),_("ul",[_("li",[v._v("什么时候使用post？\n"),_("ul",[_("li",[v._v("post一般用于修改服务器上的资源，对所发送的信息没有限制。比如\n"),_("ol",[_("li",[v._v("无法使用缓存文件（更新服务器上的文件或数据库）")]),v._v(" "),_("li",[v._v("向服务器发送大量数据（POST 没有数据量限制）")]),v._v(" "),_("li",[v._v("发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠")])])])])])]),v._v(" "),_("h2",{attrs:{id:"【4】promise构造函数是同步执行还是异步执行-那么-then-方法呢"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#【4】promise构造函数是同步执行还是异步执行-那么-then-方法呢"}},[v._v("#")]),v._v(" 【4】Promise构造函数是同步执行还是异步执行，那么 then 方法呢？")]),v._v(" "),_("p",[v._v("promise构造函数是同步执行的，then方法是异步执行的")])])}),[],!1,null,null,null);_.default=i.exports}}]);